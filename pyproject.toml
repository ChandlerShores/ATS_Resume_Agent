[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ats-resume-agent"
version = "1.0.0"
description = "Durable multi-agent system that rewrites resume bullets to be ATS-friendly, impact-focused, and tightly aligned to job descriptions"
readme = "README.md"
requires-python = ">=3.11,<3.14"
license = {text = "MIT"}
authors = [
    {name = "ATS Resume Agent Team"},
]
keywords = ["resume", "ats", "job-search", "ai", "llm", "career"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    # LLM Clients
    "openai>=1.12.0",
    "anthropic>=0.18.0",
    
    # ID Generation
    "python-ulid>=2.2.0",
    
    # HTTP Client
    "httpx>=0.26.0",
    
    # Schema Validation
    "pydantic>=2.6.0",
    "pydantic-settings>=2.1.0",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "tenacity>=8.2.3",
    
    # Document Parsing
    "python-docx>=1.1.0",
    "pdfplumber>=0.10.0",
    "chardet>=5.2.0",
    
    # API Framework
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "python-multipart>=0.0.6",
    
    # Pipeline Optimization Dependencies
    "spacy>=3.7.0",
    "redis>=5.0.0",
    "scikit-learn>=1.3.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.4",
    "pytest-cov>=4.1.0",
    
    # Linting & Formatting
    "ruff>=0.2.0",
    "black>=24.1.1",
    "mypy>=1.8.0",
    
    # Security & Analysis
    "bandit>=1.7.0",
    "vulture>=2.11",
    "pip-audit>=2.6.0",
]

redis = [
    "redis>=5.0.0",
]

nlp = [
    # NLP Libraries (currently unused, evaluate before including)
    "spacy>=3.7.0",
    "nltk>=3.8.1",
]

[project.scripts]
ats-parse-resume = "scripts.parse_resume:main"
ats-state-machine = "orchestrator.state_machine:main"

[project.urls]
Homepage = "https://github.com/yourusername/ats-resume-agent"
Repository = "https://github.com/yourusername/ats-resume-agent"
Issues = "https://github.com/yourusername/ats-resume-agent/issues"

# ===== Tool Configuration =====

[tool.setuptools.packages.find]
where = ["."]
include = ["agents*", "api*", "orchestrator*", "ops*", "schemas*", "scripts*"]
exclude = ["tests*", "out*", "data*", "_archive*", "examples*"]

[tool.ruff]
target-version = "py311"
line-length = 100
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    ".pytest_cache",
    ".ruff_cache",
    "out",
    "data",
    "_archive",
]

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B", "A", "C4", "SIM", "PIE"]
ignore = [
    "E402",  # Module level import not at top - OK for scripts
    "E501",  # Line too long - formatter handles this
    "B904",  # Raise without from - improve later
    "W293",  # Blank line with whitespace
    "W291",  # Trailing whitespace
    "PIE810", "SIM102", "SIM110", "SIM117",
    "C414", "B007", "B008",
]

[tool.ruff.lint.per-file-ignores]
"scripts/*.py" = ["E402"]
"examples/*.py" = ["E402"]
"tests/*.py" = ["E402"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | __pycache__
  | \.pytest_cache
  | out
  | data
  | _archive
)/
'''

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=agents",
    "--cov=orchestrator",
    "--cov=ops",
    "--cov=schemas",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["agents", "orchestrator", "ops", "schemas"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start permissive, tighten later
ignore_missing_imports = true  # Many deps don't have stubs yet
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "out", "data", "_archive"]
skips = ["B101", "B601"]  # Skip assert checks and shell injection in dev tools

[tool.vulture]
min_confidence = 80
paths = ["agents", "orchestrator", "ops", "schemas", "api", "scripts"]
exclude = ["tests/", "venv/", ".venv/", "out/", "data/", "_archive/"]

